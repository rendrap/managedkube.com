<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-18T14:24:06-07:00</updated><id>http://localhost:4000/</id><title type="html">DevOps Services</title><subtitle>Kubernetes/Docker consulting &amp; infrastructure SaaS product
</subtitle><author><name>Garland Kan</name></author><entry><title type="html">How I Use Kops</title><link href="http://localhost:4000/aws/kubernetes/kops/2018/07/07/how-i-use-kops.html" rel="alternate" type="text/html" title="How I Use Kops" /><published>2018-07-07T00:00:00-07:00</published><updated>2018-07-07T00:00:00-07:00</updated><id>http://localhost:4000/aws/kubernetes/kops/2018/07/07/how-i-use-kops</id><content type="html" xml:base="http://localhost:4000/aws/kubernetes/kops/2018/07/07/how-i-use-kops.html">&lt;p&gt;In a previous blog, I talked about &lt;a href=&quot;&quot;&gt;why I used &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt;&lt;/a&gt; and in this blog, I will   &amp;lt;———-
talk about how I use &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I always create my clusters by providing &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; a yaml file describing the cluster
that I want.  Here is an example cluster configuration file.  You can also find
the source link &lt;a href=&quot;&quot;&gt;here&lt;/a&gt;.                                           &amp;lt;—————————–&lt;/p&gt;

&lt;p&gt;This file is then checked into the source code management so that we can keep
track of changes.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#
# Kops cli: 1.9.0
#
apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: prod-1.k8s.devops.bot
spec:
  sshKeyName: ssh_key_file
  networkID: vpc-123456
  kubernetesApiAccess:
  # Nat GWs
  - 35.168.171.252/32
  - 52.5.225.10/32
  - 52.20.55.117/32
  - 52.201.181.125/32
  - 35.153.215.185/32
  - 34.237.126.200/32
  # Internal routes
  - 10.0.0.0/8
  api:
    dns: {}
    loadBalancer:
      type: Public
      idleTimeoutSeconds: 300
  authorization:
    rbac: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://kubernetes-kops-store/prod-1.k8s.devops.bot
  etcdClusters:
  # https://github.com/kubernetes/kops/blob/master/docs/cluster_spec.md#etcdclusters-v3--tls
  - enableEtcdTLS: true
    etcdMembers:
    - instanceGroup: master-us-east-1a
      name: a
    - instanceGroup: master-us-east-1b
      name: b
    - instanceGroup: master-us-east-1c
      name: c
    name: main
    version: 3.0.17
  - enableEtcdTLS: true
    etcdMembers:
    - instanceGroup: master-us-east-1a
      name: a
    - instanceGroup: master-us-east-1b
      name: b
    - instanceGroup: master-us-east-1c
      name: c
    name: events
    version: 3.0.17
  iam:
    # https://github.com/kubernetes/kops/blob/master/docs/iam_roles.md#iam-roles
    allowContainerRegistry: false
    legacy: false
  kubeAPIServer:
    # auditLogPath: /var/log/kube-apiserver-audit.log
    # auditLogMaxAge: 10
    # auditLogMaxBackups: 1
    # auditLogMaxSize: 100
    # auditPolicyFile: /srv/kubernetes/audit.conf
    # https://github.com/kubernetes/kops/blob/master/docs/cluster_spec.md#runtimeconfig
    # runtimeConfig:
    #   batch/v2alpha1: &quot;true&quot;
    #   apps/v1alpha1: &quot;true&quot;
    # #Istio perm for kops: https://istio.io/docs/setup/kubernetes/quick-start.html#aws-wkops
    admissionControl:
    - NamespaceLifecycle
    - LimitRanger
    - ServiceAccount
    - PersistentVolumeLabel
    - DefaultStorageClass
    - DefaultTolerationSeconds
    - MutatingAdmissionWebhook
    - ValidatingAdmissionWebhook
    - ResourceQuota
    - NodeRestriction
    - Priority
  kubelet:
    # https://github.com/kubernetes/kops/blob/master/docs/security.md#kubelet-api
    # anonymousAuth: false
    # kubeReserved:
    #     cpu: &quot;100m&quot;
    #     memory: &quot;100Mi&quot;
    #     storage: &quot;1Gi&quot;
    # kubeReservedCgroup: &quot;/kube-reserved&quot;
    # systemReserved:
    #     cpu: &quot;100m&quot;
    #     memory: &quot;100Mi&quot;
    #     storage: &quot;1Gi&quot;
    # systemReservedCgroup: &quot;/system-reserved&quot;
    # enforceNodeAllocatable: &quot;pods,system-reserved,kube-reserved&quot;
  kubernetesVersion: 1.9.3
  masterPublicName: api.prod-1.k8s.devops.bot
  networkCIDR: 10.151.0.0/16
  networking:
    canal: {}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 10.0.0.0/8
  subnets:
  # utility subnets
  - cidr: 10.151.0.0/24
    name: us-east-1a-utility
    type: Utility
    zone: us-east-1a
  - cidr: 10.151.1.0/24
    name: us-east-1b-utility
    type: Utility
    zone: us-east-1b
  - cidr: 10.151.2.0/24
    name: us-east-1c-utility
    type: Utility
    zone: us-east-1c
  - cidr: 10.151.3.0/24
    name: us-east-1d-utility
    type: Utility
    zone: us-east-1d
  - cidr: 10.151.4.0/24
    name: us-east-1e-utility
    type: Utility
    zone: us-east-1e
  - cidr: 10.151.5.0/24
    name: us-east-1f-utility
    type: Utility
    zone: us-east-1f
  # Kube masters subnets
  - cidr: 10.151.15.0/24
    name: kube-master-1a
    type: Private
    zone: us-east-1a
  - cidr: 10.151.16.0/24
    name: kube-master-1b
    type: Private
    zone: us-east-1b
  - cidr: 10.151.17.0/24
    name: kube-master-1c
    type: Private
    zone: us-east-1c
  # worker subnets
  - cidr: 10.151.21.0/24
    name: worker-zone-a
    type: Private
    zone: us-east-1a
    # egress: nat-0b280bf309e7fd7e7
    # id: subnet-c9a6f2ad
  - cidr: 10.151.22.0/24
    name: worker-zone-b
    type: Private
    zone: us-east-1b
    # egress: nat-0b280bf309e7fd7e7
    # id: subnet-aa1e7c95
  - cidr: 10.151.23.0/24
    name: worker-zone-c
    type: Private
    zone: us-east-1c
  - cidr: 10.151.24.0/24
    name: worker-zone-d
    type: Private
    zone: us-east-1d
  - cidr: 10.151.25.0/24
    name: worker-zone-e
    type: Private
    zone: us-east-1e
  - cidr: 10.151.26.0/24
    name: worker-zone-f
    type: Private
    zone: us-east-1f
  topology:
    dns:
      type: Public
    masters: private
    nodes: private

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: master-us-east-1a
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-master
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: t2.medium
  maxSize: 1
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: master-us-east-1a
    k8s.info/isSpot: &quot;false&quot;
    k8s.info/instanceType: t2.medium
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Master
  subnets:
  - kube-master-1a

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: master-us-east-1b
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-master
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: t2.medium
  maxSize: 1
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: master-us-east-1b
    k8s.info/isSpot: &quot;false&quot;
    k8s.info/instanceType: t2.medium
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Master
  subnets:
  - kube-master-1b

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: master-us-east-1c
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-master
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: t2.medium
  maxSize: 1
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: master-us-east-1c
    k8s.info/isSpot: &quot;false&quot;
    k8s.info/instanceType: t2.medium
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Master
  subnets:
  - kube-master-1c

######################
## Spot instances
## type: m4.large
######################
---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-a-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-a
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-a

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-b-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-b
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-b

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-c-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-c
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-c

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-d-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-d
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-d

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-e-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-e
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-e

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: prod-1.k8s.devops.bot
  name: spot-zone-f-m4-large
spec:
  cloudLabels:
    CostCenter: kubernetes-saas
    Owner: kubernetes
    Project: cloud
    Purpose: kubernetes-spot-node
    # https://github.com/kubernetes/autoscaler/issues/511#issuecomment-354616866
    k8s.io/cluster-autoscaler/node-template/label/prod-1.k8s.devops.bot/role: scale-zero
  # CoreOS: https://github.com/kubernetes/kops/blob/06b0111251ab87861e57dbf5f8d36f02e84af04d/docs/images.md#coreos
  image: 595879546273/CoreOS-stable-1745.7.0-hvm
  machineType: m4.large
  maxPrice: &quot;0.06&quot;
  maxSize: 10
  minSize: 0
  nodeLabels:
    kops.k8s.io/instancegroup: spot-zone-f
    prod-1.k8s.devops.bot/role: scale-zero
    k8s.info/isSpot: &quot;true&quot;
    k8s.info/instanceType: m4.large
    k8s.info/hasPublicIP: &quot;false&quot;
  role: Node
  subnets:
  - worker-zone-f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Most of this is boiler plate configurations.  It will create 3 master nodes in
3 different AWS availability zones.  AWS NAT Gateways for all of the zones.  The
Kubernetes nodes are in all availability zones (us-east-1 zones a to f) and using
spot instances.  There are tags on the nodes for using the Cluster Autoscaler so
that it can scale an instance group down to zero if it is not needed.&lt;/p&gt;

&lt;h3 id=&quot;setting-up-the-dns&quot;&gt;Setting up the DNS&lt;/h3&gt;
&lt;p&gt;Make sure that you have the DNS setup correctly in AWS Route53.&lt;/p&gt;

&lt;link to=&quot;&quot; the=&quot;&quot; kops=&quot;&quot; route53=&quot;&quot; setup=&quot;&quot; /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         &amp;lt;-----------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The easiest way is to name your cluster after the domain name you have setup.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-cluster&quot;&gt;Creating a cluster&lt;/h3&gt;
&lt;p&gt;Set the cluster name:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export NAME=prod-us-east-1.devops.bot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create the cluster&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kops create -f ${NAME}.yaml
kops create secret --name ${NAME} sshpublickey admin -i ~/.ssh/id_rsa.pub
kops update cluster ${NAME} --yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;updating-the-cluster&quot;&gt;Updating the cluster&lt;/h3&gt;
&lt;p&gt;We are always going to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--cluster&lt;/code&gt; flag so that we know specifically which
cluster our command will apply to.&lt;/p&gt;

&lt;p&gt;Apply changes and check to make sure it is doing what you intended it to update&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kops --cluster ${NAME} replace -f ${NAME}.yaml
kops --cluster ${NAME} update cluster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Execute the changes:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kops --cluster ${NAME} rolling-update cluster --yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check on which nodes needs to be updated.  This will give you a list of nodes
that requires to be rolled or updated.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kops --name ${NAME} rolling-update cluster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can target a specific node group one at a time.  For example, if you are updating
the masters and want to do one at a time.
```
kops –name ${NAME} rolling-update cluster –instance-group master-us-east-1a –yes&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">In a previous blog, I talked about why I used kops and in this blog, I will &amp;lt;———- talk about how I use kops.</summary></entry><entry><title type="html">Docker Container Toolbox</title><link href="http://localhost:4000/docker/container/tools/utilities/2018/06/28/docker-container-toolbox.html" rel="alternate" type="text/html" title="Docker Container Toolbox" /><published>2018-06-28T00:00:00-07:00</published><updated>2018-06-28T00:00:00-07:00</updated><id>http://localhost:4000/docker/container/tools/utilities/2018/06/28/docker-container-toolbox</id><content type="html" xml:base="http://localhost:4000/docker/container/tools/utilities/2018/06/28/docker-container-toolbox.html">&lt;p&gt;Docker is useful in many different ways. One way that I use containers is to use them like a toolbox. Mostly the toolbox contains just a binary that I need or a few that are useful together.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;As an example, lot of my work involves using &lt;a href=&quot;https://aws.amazon.com&quot;&gt;Amazon Web Services (AWS)&lt;/a&gt; and I used the &lt;a href=&quot;https://aws.amazon.com/cli/&quot;&gt;aws-cli&lt;/a&gt; to automate things and look up information.
Most of everything I run nowadays are in containers and most of the systems has &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt; installed. Since I usually dont want to install anything more onto these system(s) but have a need for a tools on the machine, I run a Docker container with the tool I need for my task.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I have a repository of different tools that are public and in &lt;a href=&quot;https://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt; that I keep up to date: https://github.com/sekka1/containersp.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;On a machine, if I need to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws-cli&lt;/code&gt; I would run this:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;docker run \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--env AWS_ACCESS_KEY_ID=&amp;lt;&amp;lt;YOUR_ACCESS_KEY&amp;gt;&amp;gt; \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--env AWS_SECRET_ACCESS_KEY=&amp;lt;&amp;lt;YOUR_SECRET_ACCESS&amp;gt;&amp;gt; \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--env AWS_DEFAULT_REGION=us-east-1 \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;garland/aws-cli:1.15.47 \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;aws ec2 describe-instances --instance-ids i-90949d7a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Since this is a public image, I dont need to log into Docker Hub on that machine to get it and I can use this image from anywhere.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This is even useful locally when I am testing something out. For example, the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws-cli&lt;/code&gt; has been around for a long time and has many versions. When im updating a script, a lot of the time the systems that are using this script has a certain &lt;code class=&quot;highlighter-rouge&quot;&gt;aws-cli&lt;/code&gt; version. So I would want to test with that version of the &lt;code class=&quot;highlighter-rouge&quot;&gt;aws-cli&lt;/code&gt; locally to make sure everything works out. Instead of installing various versions locally, I just run my tests with the correct versioned container.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Another use for this container is to upload items to S3 from a server. The server would usually not have &lt;code class=&quot;highlighter-rouge&quot;&gt;aws-cli&lt;/code&gt; installed but it does have Docker. With this command you can upload anything to your S3 buckets:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;docker run \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--env AWS_ACCESS_KEY_ID=&amp;lt;&amp;lt;YOUR_ACCESS_KEY&amp;gt;&amp;gt; \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;--env AWS_SECRET_ACCESS_KEY=&amp;lt;&amp;lt;YOUR_SECRET_ACCESS&amp;gt;&amp;gt; \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;-v $PWD:/data \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;garland/aws-cli:1.15.47 \&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;aws s3 sync . s3://mybucket&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Garland Kan</name></author><summary type="html">Docker is useful in many different ways. One way that I use containers is to use them like a toolbox. Mostly the toolbox contains just a binary that I need or a few that are useful together.</summary></entry><entry><title type="html">Kubernetes RBAC - giving permissions for logging and port-forwarding</title><link href="http://localhost:4000/kubernetes/rbac/security/2018/06/16/kubernetes-rbac.html" rel="alternate" type="text/html" title="Kubernetes RBAC - giving permissions for logging and port-forwarding" /><published>2018-06-16T00:00:00-07:00</published><updated>2018-06-16T00:00:00-07:00</updated><id>http://localhost:4000/kubernetes/rbac/security/2018/06/16/kubernetes-rbac</id><content type="html" xml:base="http://localhost:4000/kubernetes/rbac/security/2018/06/16/kubernetes-rbac.html">&lt;p&gt;I am really liking Kubernetes &lt;a href=&quot;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&quot;&gt;RBAC&lt;/a&gt;. It is “fairly” simple to use and so powerful.&lt;/p&gt;

&lt;p&gt;For example, a user said I can’t port forward to a port and pasted me the error:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;error upgrading connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pods &quot;selenium-node-firefox-debug-mtw7r&quot; is forbidden&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;User &quot;john&quot; cannot create pods/portforward in the namespace &quot;app1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This basically told me all that I need. It states the user cannot perform the action &lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; on the resource &lt;code class=&quot;highlighter-rouge&quot;&gt;pods/portforward&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I do think the “action” (create) and the “resource” (pods/portforward) should be highlighted somehow in the error message to make it even clearer.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;So I added this to his role:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Role&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gawkbox-spinnaker&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-saas:list-and-logs&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apiGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pods&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pods/log&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pods/portforward&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;verbs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;list&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;create&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This solved the problem. I love it when the error tells me exactly what it is and it is so easy to express this in the role.&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">I am really liking Kubernetes RBAC. It is “fairly” simple to use and so powerful.</summary></entry><entry><title type="html">Kops Cluster Templating</title><link href="http://localhost:4000/aws/kubernetes/kops/2018/06/16/kops-cluster-templating.html" rel="alternate" type="text/html" title="Kops Cluster Templating" /><published>2018-06-16T00:00:00-07:00</published><updated>2018-06-16T00:00:00-07:00</updated><id>http://localhost:4000/aws/kubernetes/kops/2018/06/16/kops-cluster-templating</id><content type="html" xml:base="http://localhost:4000/aws/kubernetes/kops/2018/06/16/kops-cluster-templating.html">&lt;p&gt;If you havent heard of the tool &lt;a href=&quot;https://github.com/kubernetes/kops&quot;&gt;Kops&lt;/a&gt; for create Kubernetes clusters, you should check it out right now! It is a great tool to create and manage the lifecycle of a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;If you use Kubernetes for production then you probably have some number of pre production clusters like &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;qa&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;staging&lt;/code&gt;. Then this leads you to have to create and maintain these clusters in a sane and easy way.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The first thing is probably not creating the kops cluster with the kops cli tool input parameters.
How would you version control this. This most likely means you want to manage/maintain these clusters with kops cluster yaml format that describes everything about the &lt;a href=&quot;https://github.com/kubernetes/kops/blob/master/docs/apireference/examples/cluster/cluster.yaml&quot;&gt;cluster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;But now you have more than one of these yaml files and when you update you have to make sure each one is updated. This leads you to the &lt;a href=&quot;https://github.com/kubernetes/kops/blob/master/docs/cluster_template.md&quot;&gt;cluster templating&lt;/a&gt; functionality the kops has to help you out.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now you can have one source &lt;code class=&quot;highlighter-rouge&quot;&gt;cluster.yaml&lt;/code&gt; file which has templated out the names, region, etc and you have a &lt;code class=&quot;highlighter-rouge&quot;&gt;values.yaml&lt;/code&gt; files which values for each cluster you want to make.&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">If you havent heard of the tool Kops for create Kubernetes clusters, you should check it out right now! It is a great tool to create and manage the lifecycle of a Kubernetes cluster.</summary></entry><entry><title type="html">S3 - How to restore an entire folders version</title><link href="http://localhost:4000/aws/s3/troubleshooting/versioning/2018/06/16/S3.html" rel="alternate" type="text/html" title="S3 - How to restore an entire folders version" /><published>2018-06-16T00:00:00-07:00</published><updated>2018-06-16T00:00:00-07:00</updated><id>http://localhost:4000/aws/s3/troubleshooting/versioning/2018/06/16/S3</id><content type="html" xml:base="http://localhost:4000/aws/s3/troubleshooting/versioning/2018/06/16/S3.html">&lt;p&gt;This tutorial explains how to use a tool that will help you to restore an entire S3 folder’s files.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You must have had &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html&quot;&gt;versioning&lt;/a&gt; enabled on your S3 bucket.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The problem is that the AWS CLI or console (GUI) does not help you restore an entire bucket or a folder’s version. You have to restore each object individually. This is a pain and error prone.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;There is a tool called &lt;a href=&quot;https://github.com/madisoft/s3-pit-restore&quot;&gt;s3-pit-restore&lt;/a&gt; that helps you out with automating restoring. It will read all of the files and download the version of the file you want to your local computer. At that point, you can upload it back to S3 or use it in another way.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You will first have to &lt;a href=&quot;https://github.com/madisoft/s3-pit-restore#installing&quot;&gt;install&lt;/a&gt; that project per their documentation.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Then there are various options for restore. The restore is more of it downloading that version’s file onto your local computer instead of reverting what is in S3. That confused me a bit when I first used this tool. So from now on, I am going to say download the version instead of restoring the version.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You first have to get the version that you want by going into the console and select a file/object. You will see a bunch of dates. These are the versions. You will have to convert them to a number format.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/s3-version.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;As an example, you can run this to download all of the buckets object from a particular time:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;s3-pit-restore -b my-bucket -d my-restored-bucket -t &quot;06-17-2016 23:59:50 +2&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-b is the bucket name.&lt;/li&gt;
  &lt;li&gt;-d is the local directory where it will download the files to&lt;/li&gt;
  &lt;li&gt;-t is the time stamp of the version you want&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can also just downlowd a sub folder of a bucket:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;s3-pit-restore -b my-bucket -d my-restored-subfolder -p mysubfolder -t &quot;06-17-2016 23:59:50 +2&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Same command as above with one additional flag:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-d is the sub folder that you want only&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Garland Kan</name></author><summary type="html">This tutorial explains how to use a tool that will help you to restore an entire S3 folder’s files.</summary></entry><entry><title type="html">Kubernetes DNS Troubleshooting</title><link href="http://localhost:4000/aws/kubernetes/2018/06/15/kubernetes-dns-troubleshooting.html" rel="alternate" type="text/html" title="Kubernetes DNS Troubleshooting" /><published>2018-06-15T00:00:00-07:00</published><updated>2018-06-15T00:00:00-07:00</updated><id>http://localhost:4000/aws/kubernetes/2018/06/15/kubernetes-dns-troubleshooting</id><content type="html" xml:base="http://localhost:4000/aws/kubernetes/2018/06/15/kubernetes-dns-troubleshooting.html">&lt;p&gt;On a new cluster we saw the following logs from an application we launched:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;2018/06/15 20:20:43.840 WARN  [grpc-default-executor-8] [ManagedChannelImpl] [ManagedChannelImpl$NameResolverListenerImpl:942] [io.grpc.internal.ManagedChannelImpl-17247] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host pubsub.googleapis.com, cause=java.net.UnknownHostException&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pubsub.googleapis.com&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.net.InetAddress.getAllByName0(InetAddress.java:1280)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.net.InetAddress.getAllByName(InetAddress.java:1192)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.net.InetAddress.getAllByName(InetAddress.java:1126)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at io.grpc.internal.DnsNameResolver$JdkResolver.resolve(DnsNameResolver.java:358)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at io.grpc.internal.DnsNameResolver$1.run(DnsNameResolver.java:172)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;at java.lang.Thread.run(Thread.java:745)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The pod didnt have ping but it had &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;. Tried curling the endpoint &lt;code class=&quot;highlighter-rouge&quot;&gt;pubsub.googleapis.com&lt;/code&gt; that it was trying to reach but that didnt work. Tried curling &lt;code class=&quot;highlighter-rouge&quot;&gt;google.com&lt;/code&gt; and that didnt work.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Then I went to another pod that had ping to give it a try.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ingress-controller-external-7bc9767f69-7qxfb:/# ping google.com
ping: unknown host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Cant resolve any hostnames either. Tried to ping a known IP:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;root@ingress-controller-external-7bc9767f69-7qxfb:/# ping 8.8.8.8&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PING 8.8.8.8 (8.8.8.8)&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;56 data bytes&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;64 bytes from 8.8.8.8&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;icmp_seq=0 ttl=51 time=0.941 ms&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;64 bytes from 8.8.8.8&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;icmp_seq=1 ttl=51 time=0.346 ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;That worked. This would make sense since the instance was able to pull the container image with a hostname. It would seem DNS and routing were working on the GCE instance level.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This lead me to think it was something wrong with the kubernetes DNS.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Then I looked at the &lt;code class=&quot;highlighter-rouge&quot;&gt;kube-systems&lt;/code&gt; namespace to see what the DNS were doing:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;kube-dns-785f949785-5slck                                        0/4       Pending            0          23h       &amp;lt;none&amp;gt;       &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kube-dns-785f949785-w7str                                        0/4       Pending            0          23h       &amp;lt;none&amp;gt;       &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kube-dns-autoscaler-69c5cbdcdd-krfn9                             0/1       Pending            0          23h       &amp;lt;none&amp;gt;       &amp;lt;none&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;They were still in pending state which would make sense.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This is showing there are a few level at play here from the instance to kubernetes&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">On a new cluster we saw the following logs from an application we launched:</summary></entry><entry><title type="html">Why use Kops</title><link href="http://localhost:4000/aws/kubernetes/kops/2017/01/12/why-use-kops.html" rel="alternate" type="text/html" title="Why use Kops" /><published>2017-01-12T00:00:00-08:00</published><updated>2017-01-12T00:00:00-08:00</updated><id>http://localhost:4000/aws/kubernetes/kops/2017/01/12/why-use-kops</id><content type="html" xml:base="http://localhost:4000/aws/kubernetes/kops/2017/01/12/why-use-kops.html">&lt;h2 id=&quot;why-use-kops-to-create-your-kubernetes-cluster&quot;&gt;Why Use Kops to create your Kubernetes cluster&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; is a tool that creates a Kubernetes clusters and help you maintain/update it.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Here is the project page for kops: &lt;a href=&quot;https://github.com/kubernetes/kops&quot;&gt;https://github.com/kubernetes/kops&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Creating and maintaining a Kubernetes cluster has always been hard and it is just getting harder because there are more and more features added which requires more configurations. While you should understand how your cluster works, I think it is not reasonable to have each operator understand everything about it. That will make it unscalable.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; provides a configuration driven way for you to provision a cluster and be able to update it throughout the cluster’s lifetime in a safe and predictable manor.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;One of the most important thing about a project is documentation. If you cant find information about what it can do and how to do it without looking at the code, that makes it very hard to use.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; is very well documented. Almost every feature has various examples on usage with cli commands included.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;should-you-use-it&quot;&gt;Should you use it?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I think if you dont need a customized Kubernetes cluster then you should use &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt;. What I mean by “customized” is that you don’t want to run an OS that &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; does not support or if you need to install something onto the base OS.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I also think that as a first swag at your application, use &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; to bring up a Kubernetes cluster. Put your app on there and try it out. A lot of the time you dont need to customize too much because your application is Dockerized already and it is agnostic to what runs it.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;If after running your application on a cluster that &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; built and it doesnt work and you have determined that you need to build your own cluster, not much time is lost. Mostly all of your Kubernetes application configuration files will work on your new cluster with zero to almost zero changes. You now also have an example of a working Kubernetes cluster to compare your own custom cluster to.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I would argue even if you think it will not work, I would prototype it on a cluster brought up by &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; first to see if it will work for your use case. If it does or through this process you find an alternate method to make your application work, you would have not only saved yourself time on creating a cluster yourself but countless hours in the future on upgrades and security patches that the &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; team will take of for you.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;final-recommendation&quot;&gt;Final recommendation&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I would recommend using &lt;code class=&quot;highlighter-rouge&quot;&gt;kops&lt;/code&gt; it is a great tool that I have used over and over again for building dev and production Kubernetes clusters.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I would also recommend using some kind of automated way of bringing up a Kubernetes cluster. This can be something like &lt;a href=&quot;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&quot;&gt;kubeadm&lt;/a&gt; or &lt;a href=&quot;https://github.com/kubernetes-incubator/kubespray&quot;&gt;kube spray&lt;/a&gt;. Or go SaaS and dont even manage your own cluster with &lt;a href=&quot;https://cloud.google.com/kubernetes-engine/&quot;&gt;GKE&lt;/a&gt;. My recommendation is rolling your own cluster is the last option.&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">Why Use Kops to create your Kubernetes cluster</summary></entry><entry><title type="html">Kubectl Pod logs</title><link href="http://localhost:4000/aws/kubernetes/logs/2017/01/12/kubectl-pod-logs.html" rel="alternate" type="text/html" title="Kubectl Pod logs" /><published>2017-01-12T00:00:00-08:00</published><updated>2017-01-12T00:00:00-08:00</updated><id>http://localhost:4000/aws/kubernetes/logs/2017/01/12/kubectl-pod-logs</id><content type="html" xml:base="http://localhost:4000/aws/kubernetes/logs/2017/01/12/kubectl-pod-logs.html">&lt;p&gt;There are a few useful options when getting logs from your Kubernetes pods:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tailing&lt;/li&gt;
  &lt;li&gt;showing the last x number of lines&lt;/li&gt;
  &lt;li&gt;combining options&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&quot;tailing&quot;&gt;tailing&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This will tail and follow the pod’s logs&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;kubectl -f &amp;lt;pod_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&quot;showing-the-last-x-number-of-lines&quot;&gt;Showing the last X number of lines&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;When a pod has been running for a while, the logs can be very long. You probably only want to see the last few lines.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;kubectl --tail=10 &amp;lt;pod_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id=&quot;combining-options&quot;&gt;Combining options&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can combine the follow and last x number of lines options&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;kubectl -f --tail=10 &amp;lt;pod_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Garland Kan</name></author><summary type="html">There are a few useful options when getting logs from your Kubernetes pods:</summary></entry><entry><title type="html">AWS WAF</title><link href="http://localhost:4000/aws/waf/security/2017/01/12/aws-waf.html" rel="alternate" type="text/html" title="AWS WAF" /><published>2017-01-12T00:00:00-08:00</published><updated>2017-01-12T00:00:00-08:00</updated><id>http://localhost:4000/aws/waf/security/2017/01/12/aws-waf</id><content type="html" xml:base="http://localhost:4000/aws/waf/security/2017/01/12/aws-waf.html">&lt;p&gt;The &lt;a href=&quot;https://aws.amazon.com/waf/&quot;&gt;AWS WAF&lt;/a&gt; (Web application firewall) protects your web servers from malicious attacks from the internet and provides DDoS protection at a very low cost compared to all other available solutions. With so many automated bots looking to exploit vulnerabilities, you can be hacked even if you’re not targeted. Once a bot scan has found you susceptible to a certain vulnerability, it will extract as much information as possible. In today’s world, you must take active steps to protect yourself before something bad happens.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Typically, you fully open up your web application to the internet. For example, in most cases you allow any request going to port 80 or 443 to go directly to the web server, without any filtering, and leave it up to the web server on whether or not to respond. This is like not locking your front door because you like your neighbors. We all lock our doors because we don’t want strangers rifling through our drawers, so why would we let anyone come to our web servers and send it any request they like?&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You know that you shouldn’t, but security is really hard to implement and maintain.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;AWS WAF can make security highly automatable. Everything can be configured and updated with an API so that it can be integrated into your development and test workflows. However, as usual, AWS provides us with some but not all of the building blocks you need to operationalize this process.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;AWS WAF provides a few layers of security that we can take advantage of:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;General and known vulnerabilities (&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_Top_10&quot;&gt;OWASP&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;DDoS attacks&lt;/li&gt;
  &lt;li&gt;Custom filtering to allow only what your application needs (HTTP Methods, URLs, post data, etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Using the AWS WAF solution without being a security expert starts you down the right path - you’ve locked your doors but not your windows. It provides you protection with default rules, but those rules have not been updated since it was created in June 2017. Vulnerabilities are constantly changing and you should update these rules to defend against these new threats.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now, let’s think about your specific application. You should create rules to detect and limit traffic to your application to further reduce the attack surface:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Endpoint path URLs&lt;/li&gt;
  &lt;li&gt;HTTP Methods&lt;/li&gt;
  &lt;li&gt;Required/deny headers&lt;/li&gt;
  &lt;li&gt;Type of PUT/POST data that you want&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;By providing the appropriate amount of access for your web application, you reduce the risk of unknown vulnerabilities. Limiting unnecessary access means less availability for someone to exploit your application with. Don’t leave your window open to the world.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;This requires you to add the WAF into your software development life cycle (SDLC). By adding the WAF into your development and test processes, you can treat these rules as part of your software. The AWS WAF can be created via the &lt;a href=&quot;https://docs.aws.amazon.com/waf/latest/APIReference/Welcome.html&quot;&gt;AWS API&lt;/a&gt; and can be fully integrated into a CI/CD workflow. When your web application changes, you should always reassess your security and update it as necessary. During the end to end tests, the updated WAF rules can be applied by automation and tested to ensure everything still works as designed before hitting production. This will also allow your security team to easily contribute and assess your application security. They can make changes and test those changes in their own sandbox area without affecting other developers or live systems.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Good security practice involves layers and defense in depth that are being constantly updated to keep it current and customized to your application. Security must be one of your main software features, something that is continually improved and updated to fit your needs.&lt;/p&gt;</content><author><name>Garland Kan</name></author><summary type="html">The AWS WAF (Web application firewall) protects your web servers from malicious attacks from the internet and provides DDoS protection at a very low cost compared to all other available solutions. With so many automated bots looking to exploit vulnerabilities, you can be hacked even if you’re not targeted. Once a bot scan has found you susceptible to a certain vulnerability, it will extract as much information as possible. In today’s world, you must take active steps to protect yourself before something bad happens.</summary></entry></feed>